namespace BoardGameHub
{
    // Represents the interface for a game............
    public interface IGame
    {
        // Initializes the game.............
        void Initialize();

        // makes a move of a chosen player..............
        bool MakeMove(int playerId, IPosition position);

        // Checks if undoing a move is possible..............
        bool CanUndo();

        // Undoes the last move..........
        bool UndoMove();

        // Checks if redoing a move is possible...............
        bool CanRedo();

        // Redoes the last undone move............
        bool RedoMove();

        // Retrieves the ID of the current player............
        int GetCurrentPlayer();

        // Checks if the game is over..............
        bool IsGameOver();

        // Retrieves the ID of the winning player or -1 for no winner................
        int GetWinner();

        // Retrieves the current state of the game board............
        string GetBoardState();

        // Retrieves the maximum position on the game board.............
        IPosition GetMaxPosition();
        
        // Retrieves a hint for the move format................
        string GetMoveFormatHint();

        // Saves the current game state to a file............
        bool SaveGame(string player1Type, string player2Type, string fileName);

        // Loads a game state from a file.................
        (bool, string, string) LoadGame(string fileName);
    }
}
